server.port=8080
#配置多个binder
spring.cloud.stream.default-binder=rabbit1
spring.cloud.stream.binders.rabbit1.type=rabbit
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.host=192.168.147.135
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.username=admin
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.password=123456
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.virtual-host=/mirror
spring.cloud.stream.binders.rabbit2.type=rabbit
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.host=192.168.147.136
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.username=admin
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.password=123456
#spring.cloud.stream.bindings.output.destination=streamExchange
#spring.cloud.stream.bindings.input.destination=streamExchange
#spring.cloud.stream.bindings.input.group=stream
#spring.cloud.stream.bindings.input.content-type=text/plain
#spring.cloud.stream.bindings.consumer1.group=stream
#spring.cloud.stream.bindings.consumer2.group=stream
#spring.cloud.stream.bindings.consumer3.group=stream
#spring.cloud.stream.bindings.consumer4.group=stream2
#
##消息生产者端配置
#
## 启动发送者分区
#spring.cloud.stream.bindings.output.producer.partitioned=true
##指定参与消息分区的消费端节点数量
#spring.cloud.stream.bindings.output.producer.partition-count=2
##只有消费端分区ID为1的消费端能接收到消息
#spring.cloud.stream.bindings.output.producer.partition-key-expression=1
#
##消息消费者端配置
#
##启动消费分区
#spring.cloud.stream.bindings.input.consumer.partitioned=true
##参与分区的消费端节点个数
#spring.cloud.stream.bindings.input.consumer.instance-count=2
##设置该实例的消费端分区ID
#spring.cloud.stream.bindings.input.consumer.instance-index=1
#spring.cloud.stream.function.definition=source1;source2;sink1;sink2
#spring.cloud.stream.bindings.source1-out-0.destination=test1
#spring.cloud.stream.bindings.source2-out-0.destination=test2
#spring.cloud.stream.bindings.sink1-in-0.destination=test1
#spring.cloud.stream.bindings.sink2-in-0.destination=test2
spring.cloud.stream.function.definition=echo;input;consumer;gather;gatherEcho
spring.cloud.stream.bindings.output.destination=scstreamExchange
spring.cloud.stream.bindings.input-in-0.destination=scstreamExchange
spring.cloud.stream.bindings.echo-in-0.destination=scstreamExchange
spring.cloud.stream.bindings.consumer-in-0.destination=scstreamExchange2
spring.cloud.stream.bindings.echo-out-0.destination=scstreamExchange2
spring.cloud.stream.bindings.input-in-0.group=myinput1
spring.cloud.stream.bindings.echo-in-0.group=echo
spring.cloud.stream.bindings.consumer-in-0.group=consumers
spring.cloud.stream.bindings.echo-out-0.group=consumers
#spring.cloud.stream.bindings.gather1.destination=gatherExchange1
#spring.cloud.stream.bindings.gather2.destination=gatherExchange2
#spring.cloud.stream.bindings.gather-in-0.destination=gatherExchange1
#spring.cloud.stream.bindings.gather-in-0.group=gather1
#spring.cloud.stream.bindings.gather-in-1.destination=gatherExchange2
#spring.cloud.stream.bindings.gather-in-1.group=gather2
#spring.cloud.stream.bindings.gather-out-0.destination=gatherOutExchange
#spring.cloud.stream.bindings.gatherEcho-in-0.destination=gatherOutExchange
#spring.cloud.stream.bindings.gatherEcho-in-0.group=gatherEcho

